from datetime import datetime, timedelta
from aiogram import Bot
from database.models import User
from database import get_db

class ReminderService:
    def __init__(self, bot: Bot):
        self.bot = bot

    async def send_weight_reminder(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è"""
        db = next(get_db())
        users = db.query(User).all()
        
        for user in users:
            last_weight = (
                db.query(WeightRecord)
                .filter(WeightRecord.user_id == user.id)
                .order_by(WeightRecord.date.desc())
                .first()
            )
            
            if not last_weight or (datetime.utcnow() - last_weight.date).days >= 7:
                await self.bot.send_message(
                    user.telegram_id,
                    "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –≤–µ—Å! üìä\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /weight –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."
                )

    async def send_workout_reminder(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö"""
        db = next(get_db())
        users = db.query(User).all()
        
        for user in users:
            last_workout = (
                db.query(WorkoutPlan)
                .filter(WorkoutPlan.user_id == user.id)
                .order_by(WorkoutPlan.date.desc())
                .first()
            )
            
            if last_workout:
                await self.bot.send_message(
                    user.telegram_id,
                    "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É! üí™\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /workout_today –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã."
                ) 